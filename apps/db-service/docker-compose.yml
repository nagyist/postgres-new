services:
  db-service:
    image: db-service
    build:
      context: ../..
      dockerfile: apps/db-service/Dockerfile
    env_file:
      - .env
    ports:
      - 5432:5432
    devices:
      - /dev/fuse
    cap_add:
      - SYS_ADMIN
    depends_on:
      minio:
        condition: service_healthy
  tls-init:
    image: tls-init
    build:
      context: .
    env_file:
      - .env
    devices:
      - /dev/fuse
    cap_add:
      - SYS_ADMIN
    command: ./scripts/generate-certs.sh
    depends_on:
      minio:
        condition: service_healthy
  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - 9000:9000
      - 9001:9001
    command: server /data --console-address ":9001"
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 5s
      timeout: 5s
      retries: 1
  minio-init:
    image: minio/mc
    entrypoint: >
      /bin/sh -c "
        mc alias set local http://minio:9000 minioadmin minioadmin;
        (mc ls local/test || mc mb local/test);
      "
    depends_on:
      minio:
        condition: service_healthy
  dns:
    build:
      context: ./tools/dns
    environment:
      WILDCARD_DOMAIN: db.example.com
      SERVICE_NAME: db-service
    networks:
      default:
        ipv4_address: 172.20.0.10
  psql:
    image: postgres:16
    depends_on:
      - dns
    dns:
      - 172.20.0.10

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
